name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    env:
      SQLX_VERSION: 0.6.2
      SQLX_FEATURES: "rustls,postgres"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-audit
          version: latest
          use-tool-cache: true
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
#      - name: Migrate Database
#        run: |
#          sudo apt install libpq-dev -y
#          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: clippy
          args: -- -D warnings

      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Code Coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--ignore-tests --avoid-cfg-tarpaulin'
      - name: Security Vulnerability check
        run: cargo audit
